/*
 * User Service
 *
 * This is simple client API
 *
 * API version: 1.0.0
 * Contact: schetinnikov@gmail.com
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

import (
	"fmt"
	"net/http"

	"github.com/gorilla/mux"

	_ "otus/crud/docs"

	httpSwagger "github.com/swaggo/http-swagger"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	// Добавляем роут для Swagger UI
	router.PathPrefix("/swagger-ui/").Handler(httpSwagger.WrapHandler)

	// Сервис готов к работе
	isReady.Store(true)

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	// Web page
	Route{"Index", "GET", "/", Index},
	// State handlers
	Route{"Health", "GET", "/api/v1/health", Health},
	Route{"Ready", "GET", "/api/v1/ready", Ready},
	// API handlers
	Route{"CreateUser", "POST", "/api/v1/users", CreateUser},
	Route{"DeleteUser", "DELETE", "/api/v1/users/{userId}", DeleteUser},
	Route{"FindUserById", "GET", "/api/v1/users/{userId}", FindUserById},
	Route{"UpdateUser", "PUT", "/api/v1/users/{userId}", UpdateUser},
}
